{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://odin-todo-list/./src/index.js"],"sourcesContent":["// import * as task from \"./task.js\";\r\n\r\nconst projects = [];\r\nlet currentProject = 0;\r\n\r\nclass Project {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n}\r\nprojects.push(new Project(\"test1\"));\r\nprojects.push(new Project(\"test2\"));\r\n\r\nconst content = document.querySelector(\".content\");\r\nconst selectProjectList = document.querySelector(\"#project-list\");\r\n\r\nselectProjectList.addEventListener(\"change\", () => {\r\n  currentProject = selectProjectList.value;\r\n  console.log(currentProject);\r\n  renderTasks();\r\n});\r\n\r\nfunction renderProjectList() {\r\n  clearProjectList();\r\n  projects.forEach((item, index) => {\r\n    const option = document.createElement(\"option\");\r\n    option.textContent = item.name;\r\n    option.value = index;\r\n\r\n    selectProjectList.appendChild(option);\r\n  });\r\n}\r\nrenderProjectList();\r\n\r\nfunction clearProjectList() {\r\n  selectProjectList.innerText = \"\";\r\n}\r\n\r\nconst inputProjectNew = document.querySelector(\"#project-new\");\r\nconst btnProjectNew = document.querySelector(\".project-new-btn\");\r\n\r\nfunction checkUniqueProject(name) {\r\n  let result = false;\r\n  projects.forEach((item) => {\r\n    if (item.name === name) {\r\n      console.log(\"Error duplicate name\");\r\n      return (result = true);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nbtnProjectNew.addEventListener(\"click\", () => {\r\n  if (inputProjectNew.value) {\r\n    if (!checkUniqueProject(inputProjectNew.value)) {\r\n      projects.push(new Project(inputProjectNew.value));\r\n      inputProjectNew.value = \"\";\r\n      renderProjectList();\r\n    }\r\n  }\r\n});\r\n\r\nconst btnProjectDelete = document.querySelector(\".project-delete-btn\");\r\nbtnProjectDelete.addEventListener(\"click\", () => {\r\n  projects.splice(currentProject, 1);\r\n  renderProjectList();\r\n  renderTasks();\r\n});\r\n\r\nclass Task {\r\n  constructor(title, dueDate, description, priority) {\r\n    this.title = title;\r\n    this.dueDate = dueDate;\r\n    this.description = description;\r\n    this.priority = priority;\r\n  }\r\n}\r\n\r\nconst btnNewTask = document.querySelector(\".new-task-btn\");\r\nconst inputNewTaskTitle = document.querySelector(\"#new-task-title\");\r\nconst inputNewTaskDueDate = document.querySelector(\"#new-task-due-date\");\r\n\r\nfunction addTask(title, dueDate) {\r\n  projects[currentProject].tasks.push(new Task(title, dueDate));\r\n}\r\n\r\nbtnNewTask.addEventListener(\"click\", () => {\r\n  if (inputNewTaskTitle.value) {\r\n    addTask(inputNewTaskTitle.value, inputNewTaskDueDate.value);\r\n    inputNewTaskTitle.value = \"\";\r\n    inputNewTaskDueDate.value = \"\";\r\n    renderTasks();\r\n  }\r\n});\r\n\r\nfunction clearContent() {\r\n  content.innerText = \"\";\r\n}\r\n\r\nfunction addDeleteBtn(projectTask, index) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Delete\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    projectTask.splice(index, 1);\r\n    renderTasks();\r\n  });\r\n}\r\n\r\nconst editor = document.querySelector(\"dialog\");\r\nconst editorTitle = document.querySelector(\"#edit-title\");\r\nconst editorDescription = document.querySelector(\"#edit-description\");\r\nconst editorDueDate = document.querySelector(\"#edit-due-date\");\r\nconst editorPriority = document.querySelector(\"#edit-priority\");\r\n\r\neditor.addEventListener(\"click\", (e) => {\r\n  const target = e.target;\r\n  if (target.classList.contains(\"edit-submit-btn\")) {\r\n    projects[0].tasks[openingTask].title = editorTitle.value;\r\n    projects[0].tasks[openingTask].description = editorDescription.value;\r\n    projects[0].tasks[openingTask].dueDate = editorDueDate.value;\r\n    projects[0].tasks[openingTask].priority = editorPriority.checked;\r\n    renderTasks();\r\n    console.log(projects);\r\n  }\r\n  if (target.classList.contains(\"edit-close-btn\")) {\r\n    editor.close();\r\n  }\r\n});\r\n\r\nlet openingTask;\r\n\r\nfunction addEditBtn(projectTask, index) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Edit\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    openingTask = index;\r\n    projectTask.title\r\n      ? (editorTitle.value = projectTask.title)\r\n      : (editorTitle.value = \"\");\r\n    projectTask.description\r\n      ? (editorDescription.value = projectTask.description)\r\n      : (editorDescription.value = \"\");\r\n    projectTask.dueDate\r\n      ? (editorDueDate.value = projectTask.dueDate)\r\n      : (editorDueDate.value = \"\");\r\n    projectTask.priority\r\n      ? (editorPriority.checked = projectTask.priority)\r\n      : (editorPriority.checked = false);\r\n    editor.show();\r\n  });\r\n}\r\n\r\nfunction renderTasks() {\r\n  clearContent();\r\n  const tasks = projects[currentProject].tasks;\r\n\r\n  tasks.forEach((task, index) => {\r\n    const para = document.createElement(\"p\");\r\n    para.textContent = `${task.title} DueDate${task.dueDate}`;\r\n    content.appendChild(para);\r\n    addEditBtn(task, index);\r\n    addDeleteBtn(tasks, index);\r\n  });\r\n}\r\n"],"names":["projects","currentProject","Project","constructor","name","this","tasks","push","content","document","querySelector","selectProjectList","renderProjectList","innerText","forEach","item","index","option","createElement","textContent","value","appendChild","addEventListener","console","log","renderTasks","inputProjectNew","result","checkUniqueProject","splice","Task","title","dueDate","description","priority","btnNewTask","inputNewTaskTitle","inputNewTaskDueDate","editor","editorTitle","editorDescription","editorDueDate","editorPriority","openingTask","task","para","projectTask","btn","checked","show","addEditBtn","addDeleteBtn","e","target","classList","contains","close"],"sourceRoot":""}