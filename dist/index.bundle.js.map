{"version":3,"file":"index.bundle.js","mappings":"MAAA,MAAMA,EAAW,GACjB,IACIC,EADAC,EAAiB,EAGrB,MAAMC,EACJ,WAAAC,CAAYC,GACVC,KAAKD,KAAOA,EACZC,KAAKC,MAAQ,EACf,EAEFP,EAASQ,KAAK,IAAIL,EAAQ,UAC1BH,EAASQ,KAAK,IAAIL,EAAQ,UAE1B,MAAMM,EACJ,WAAAL,CAAYM,EAAOC,EAASC,EAAaC,GACvCP,KAAKI,MAAQA,EACbJ,KAAKK,QAAUA,EACfL,KAAKM,YAAcA,EACnBN,KAAKO,SAAWA,CAClB,EAIF,MAAMC,EAAkBC,SAASC,cAAc,gBACzCC,EAAgBF,SAASC,cAAc,oBACvCE,EAAkBH,SAASC,cAAc,sBAgB/CC,EAAcE,iBAAiB,SAAS,KAClCL,EAAgBM,QAftB,SAA4Bf,GAC1B,IAAIgB,GAAS,EAUb,OATArB,EAASsB,SAASC,IAChB,GAAIA,EAAKlB,OAASA,EAKhB,OAJAa,EAAgBM,YAAc,yBAC9BC,YAAW,KACTP,EAAgBM,YAAc,EAAE,GAC/B,KACKH,GAAS,CACnB,IAEKA,CACT,CAISK,CAAmBZ,EAAgBM,SACtCpB,EAASQ,KAAK,IAAIL,EAAQW,EAAgBM,QAC1CN,EAAgBM,MAAQ,GACxBO,IACAC,EAAkBR,MAAQpB,EAAS6B,OAAS,EAC5C3B,EAAiB0B,EAAkBR,MACnCU,KAEJ,IAIF,MAAMC,EAAUhB,SAASC,cAAc,YAEjCgB,EAAmBjB,SAASC,cAAc,sBAC1CY,EAAoBb,SAASC,cAAc,iBAC3CiB,EAAqBlB,SAASC,cAAc,mBA8BlD,SAASW,IAHPC,EAAkBM,UAAY,GAK9BlC,EAASsB,SAAQ,CAACC,EAAMY,KACtB,MAAMC,EAASrB,SAASsB,cAAc,UACtCD,EAAOZ,YAAcD,EAAKlB,KAC1B+B,EAAOhB,MAAQe,EAEfP,EAAkBU,YAAYF,EAAO,GAEzC,CArCAJ,EAAiBb,iBAAiB,SAAUoB,IAC1C,MAAMC,EAASD,EAAEC,OAEbA,EAAOC,UAAUC,SAAS,wBAC5B1C,EAAS2C,OAAOzC,EAAgB,GAChCyB,IACAG,KAGEU,EAAOC,UAAUC,SAAS,uBACxBT,EAAmBb,QACrBpB,EAASE,GAAgBG,KAAO4B,EAAmBb,MACnDa,EAAmBb,MAAQ,GAC3BO,IACAG,IAEJ,IAGFF,EAAkBT,iBAAiB,UAAU,KAC3CjB,EAAiB0B,EAAkBR,MACnCU,GAAa,IAiBfH,IAGA,MAAMiB,EAAc7B,SAASC,cAAc,iBAE3C4B,EAAYzB,iBAAiB,UAAU,KACrCW,GAAa,IAIf,MAAMe,EAAoB9B,SAASC,cAAc,mBAC3C8B,EAAsB/B,SAASC,cAAc,sBAyDnD,SAAS+B,EAAeC,EAASC,GAC/BD,EAAQzC,MAAMe,SAAQ,CAAC4B,EAAMf,KAC3B,MAAMgB,EAAOpC,SAASsB,cAAc,KAChCa,EAAKrC,WAAUsC,EAAK3B,aAAe,WACvC2B,EAAK3B,aAAe,GAAG0B,EAAKxC,SACxBwC,EAAKvC,UAASwC,EAAK3B,aAAe,IAAI0B,EAAKvC,aAC3CiC,EAAYQ,UAASD,EAAK3B,aAAe,IAAIwB,EAAQ3C,SAEzD0B,EAAQO,YAAYa,GA7CxB,SAAoBE,EAAalB,EAAOc,GACtC,MAAMK,EAAMvC,SAASsB,cAAc,UACnCiB,EAAI9B,YAAc,OAClBO,EAAQO,YAAYgB,GACpBA,EAAInC,iBAAiB,SAAS,KACxB8B,GAAgB,IAClBrB,EAAkBR,MAAQ6B,EAC1B/C,EAAiB0B,EAAkBR,OAGrCnB,EAAckC,EACdkB,EAAY3C,MACP6C,EAAYnC,MAAQiC,EAAY3C,MAChC6C,EAAYnC,MAAQ,GACzBiC,EAAYzC,YACP4C,EAAkBpC,MAAQiC,EAAYzC,YACtC4C,EAAkBpC,MAAQ,GAC/BiC,EAAY1C,QACP8C,EAAcrC,MAAQiC,EAAY1C,QAClC8C,EAAcrC,MAAQ,GAC3BiC,EAAYxC,SACP6C,EAAeN,QAAUC,EAAYxC,SACrC6C,EAAeN,SAAU,EAC9BO,EAAOC,MAAM,GAEjB,CAqBIC,CAAWX,EAAMf,EAAOc,GAnB5B,SAAsBI,EAAalB,GACjC,MAAMmB,EAAMvC,SAASsB,cAAc,UACnCiB,EAAI9B,YAAc,SAClBO,EAAQO,YAAYgB,GACpBA,EAAInC,iBAAiB,SAAS,KAC5BkC,EAAYV,OAAOR,EAAO,GAC1BL,GAAa,GAEjB,CAYIgC,CAAad,EAAQzC,MAAO4B,EAAM,GAEtC,CAEA,SAASL,IAtDPC,EAAQG,UAAY,GAwDhBU,EAAYQ,QACdpD,EAASsB,SAAQ,CAAC0B,EAASC,KACzBF,EAAeC,EAASC,EAAa,IAGvCF,EAAe/C,EAASE,GAAiBA,EAE7C,CA/EmBa,SAASC,cAAc,iBAM/BG,iBAAiB,SAAS,KAJrC,IAAiBT,EAAOC,EAKlBkC,EAAkBzB,QALPV,EAMLmC,EAAkBzB,MANNT,EAMamC,EAAoB1B,MALvDpB,EAASE,GAAgBK,MAAMC,KAAK,IAAIC,EAAKC,EAAOC,IAMlDkC,EAAkBzB,MAAQ,GAC1B0B,EAAoB1B,MAAQ,GAC5BU,IACF,IAsEF,MAAM6B,EAAS5C,SAASC,cAAc,UAChCuC,EAAcxC,SAASC,cAAc,eACrCwC,EAAoBzC,SAASC,cAAc,qBAC3CyC,EAAgB1C,SAASC,cAAc,kBACvC0C,EAAiB3C,SAASC,cAAc,kBAE9C2C,EAAOxC,iBAAiB,SAAUoB,IAChC,MAAMC,EAASD,EAAEC,OACbA,EAAOC,UAAUC,SAAS,qBAC5B1C,EAASE,GAAgBK,MAAMN,GAAaS,MAAQ6C,EAAYnC,MAChEpB,EAASE,GAAgBK,MAAMN,GAAaW,YAC1C4C,EAAkBpC,MACpBpB,EAASE,GAAgBK,MAAMN,GAAaU,QAAU8C,EAAcrC,MACpEpB,EAASE,GAAgBK,MAAMN,GAAaY,SAC1C6C,EAAeN,QACjBtB,KAEEU,EAAOC,UAAUC,SAAS,mBAC5BiB,EAAOI,OACT,G","sources":["webpack://odin-todo-list/./src/index.js"],"sourcesContent":["const projects = [];\r\nlet openingProject = 0;\r\nlet openingTask;\r\n\r\nclass Project {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n}\r\nprojects.push(new Project(\"test1\"));\r\nprojects.push(new Project(\"test2\"));\r\n\r\nclass Task {\r\n  constructor(title, dueDate, description, priority) {\r\n    this.title = title;\r\n    this.dueDate = dueDate;\r\n    this.description = description;\r\n    this.priority = priority;\r\n  }\r\n}\r\n\r\n// Create New Project\r\nconst inputProjectNew = document.querySelector(\"#project-new\");\r\nconst btnProjectNew = document.querySelector(\".project-new-btn\");\r\nconst errorProjectNew = document.querySelector(\".project-new-error\");\r\n\r\nfunction checkUniqueProject(name) {\r\n  let result = false;\r\n  projects.forEach((item) => {\r\n    if (item.name === name) {\r\n      errorProjectNew.textContent = \"Project already exists\";\r\n      setTimeout(() => {\r\n        errorProjectNew.textContent = \"\";\r\n      }, 2000);\r\n      return (result = true);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nbtnProjectNew.addEventListener(\"click\", () => {\r\n  if (inputProjectNew.value) {\r\n    if (!checkUniqueProject(inputProjectNew.value)) {\r\n      projects.push(new Project(inputProjectNew.value));\r\n      inputProjectNew.value = \"\";\r\n      renderProjectList();\r\n      selectProjectList.value = projects.length - 1;\r\n      openingProject = selectProjectList.value;\r\n      renderTasks();\r\n    }\r\n  }\r\n});\r\n\r\n// Select Project\r\nconst content = document.querySelector(\".content\");\r\n\r\nconst projectContainer = document.querySelector(\".project-container\");\r\nconst selectProjectList = document.querySelector(\"#project-list\");\r\nconst inputProjectRename = document.querySelector(\"#project-rename\");\r\n\r\nprojectContainer.addEventListener(\"click\", (e) => {\r\n  const target = e.target;\r\n\r\n  if (target.classList.contains(\"project-delete-btn\")) {\r\n    projects.splice(openingProject, 1);\r\n    renderProjectList();\r\n    renderTasks();\r\n  }\r\n\r\n  if (target.classList.contains(\"project-rename-btn\")) {\r\n    if (inputProjectRename.value) {\r\n      projects[openingProject].name = inputProjectRename.value;\r\n      inputProjectRename.value = \"\";\r\n      renderProjectList();\r\n      renderTasks();\r\n    }\r\n  }\r\n});\r\n\r\nselectProjectList.addEventListener(\"change\", () => {\r\n  openingProject = selectProjectList.value;\r\n  renderTasks();\r\n});\r\n\r\nfunction clearProjectList() {\r\n  selectProjectList.innerText = \"\";\r\n}\r\n\r\nfunction renderProjectList() {\r\n  clearProjectList();\r\n  projects.forEach((item, index) => {\r\n    const option = document.createElement(\"option\");\r\n    option.textContent = item.name;\r\n    option.value = index;\r\n\r\n    selectProjectList.appendChild(option);\r\n  });\r\n}\r\nrenderProjectList();\r\n\r\n// All Projects\r\nconst allProjects = document.querySelector(\"#all-projects\");\r\n\r\nallProjects.addEventListener(\"change\", () => {\r\n  renderTasks();\r\n});\r\n\r\n// New Task\r\nconst inputNewTaskTitle = document.querySelector(\"#new-task-title\");\r\nconst inputNewTaskDueDate = document.querySelector(\"#new-task-due-date\");\r\nconst btnNewTask = document.querySelector(\".new-task-btn\");\r\n\r\nfunction addTask(title, dueDate) {\r\n  projects[openingProject].tasks.push(new Task(title, dueDate));\r\n}\r\n\r\nbtnNewTask.addEventListener(\"click\", () => {\r\n  if (inputNewTaskTitle.value) {\r\n    addTask(inputNewTaskTitle.value, inputNewTaskDueDate.value);\r\n    inputNewTaskTitle.value = \"\";\r\n    inputNewTaskDueDate.value = \"\";\r\n    renderTasks();\r\n  }\r\n});\r\n\r\nfunction clearContent() {\r\n  content.innerText = \"\";\r\n}\r\n\r\nfunction addEditBtn(projectTask, index, projectIndex) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Edit\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    if (projectIndex >= 0) {\r\n      selectProjectList.value = projectIndex;\r\n      openingProject = selectProjectList.value;\r\n    }\r\n\r\n    openingTask = index;\r\n    projectTask.title\r\n      ? (editorTitle.value = projectTask.title)\r\n      : (editorTitle.value = \"\");\r\n    projectTask.description\r\n      ? (editorDescription.value = projectTask.description)\r\n      : (editorDescription.value = \"\");\r\n    projectTask.dueDate\r\n      ? (editorDueDate.value = projectTask.dueDate)\r\n      : (editorDueDate.value = \"\");\r\n    projectTask.priority\r\n      ? (editorPriority.checked = projectTask.priority)\r\n      : (editorPriority.checked = false);\r\n    editor.show();\r\n  });\r\n}\r\n\r\nfunction addDeleteBtn(projectTask, index) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Delete\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    projectTask.splice(index, 1);\r\n    renderTasks();\r\n  });\r\n}\r\n\r\nfunction pushTasksToDom(project, projectIndex) {\r\n  project.tasks.forEach((task, index) => {\r\n    const para = document.createElement(\"p\");\r\n    if (task.priority) para.textContent += \"[Bell] \";\r\n    para.textContent += `${task.title} `;\r\n    if (task.dueDate) para.textContent += `[${task.dueDate}] `;\r\n    if (allProjects.checked) para.textContent += `{${project.name}}`;\r\n\r\n    content.appendChild(para);\r\n    addEditBtn(task, index, projectIndex);\r\n    addDeleteBtn(project.tasks, index);\r\n  });\r\n}\r\n\r\nfunction renderTasks() {\r\n  clearContent();\r\n  if (allProjects.checked) {\r\n    projects.forEach((project, projectIndex) => {\r\n      pushTasksToDom(project, projectIndex);\r\n    });\r\n  } else {\r\n    pushTasksToDom(projects[openingProject], openingProject);\r\n  }\r\n}\r\n\r\n// Editor modal\r\nconst editor = document.querySelector(\"dialog\");\r\nconst editorTitle = document.querySelector(\"#edit-title\");\r\nconst editorDescription = document.querySelector(\"#edit-description\");\r\nconst editorDueDate = document.querySelector(\"#edit-due-date\");\r\nconst editorPriority = document.querySelector(\"#edit-priority\");\r\n\r\neditor.addEventListener(\"click\", (e) => {\r\n  const target = e.target;\r\n  if (target.classList.contains(\"edit-submit-btn\")) {\r\n    projects[openingProject].tasks[openingTask].title = editorTitle.value;\r\n    projects[openingProject].tasks[openingTask].description =\r\n      editorDescription.value;\r\n    projects[openingProject].tasks[openingTask].dueDate = editorDueDate.value;\r\n    projects[openingProject].tasks[openingTask].priority =\r\n      editorPriority.checked;\r\n    renderTasks();\r\n  }\r\n  if (target.classList.contains(\"edit-close-btn\")) {\r\n    editor.close();\r\n  }\r\n});\r\n"],"names":["projects","openingTask","openingProject","Project","constructor","name","this","tasks","push","Task","title","dueDate","description","priority","inputProjectNew","document","querySelector","btnProjectNew","errorProjectNew","addEventListener","value","result","forEach","item","textContent","setTimeout","checkUniqueProject","renderProjectList","selectProjectList","length","renderTasks","content","projectContainer","inputProjectRename","innerText","index","option","createElement","appendChild","e","target","classList","contains","splice","allProjects","inputNewTaskTitle","inputNewTaskDueDate","pushTasksToDom","project","projectIndex","task","para","checked","projectTask","btn","editorTitle","editorDescription","editorDueDate","editorPriority","editor","show","addEditBtn","addDeleteBtn","close"],"sourceRoot":""}