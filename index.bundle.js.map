{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://odin-todo-list/./src/index.js"],"sourcesContent":["class Project {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n}\r\n\r\nclass Task {\r\n  constructor(title, dueDate, description, priority) {\r\n    this.title = title;\r\n    this.dueDate = dueDate;\r\n    this.description = description;\r\n    this.priority = priority;\r\n  }\r\n}\r\nconst projects = JSON.parse(localStorage.getItem(\"data\")) || [\r\n  new Project(\"Default\"),\r\n];\r\nlet openingProject = 0;\r\nlet openingTask;\r\n\r\nfunction saveToLocal() {\r\n  localStorage.setItem(\"data\", JSON.stringify(projects));\r\n}\r\n\r\n// Create New Project\r\nconst inputProjectNew = document.querySelector(\"#project-new\");\r\nconst btnProjectNew = document.querySelector(\".project-new-btn\");\r\nconst errorProjectNew = document.querySelector(\".project-new-error\");\r\n\r\nfunction checkUniqueProject(name) {\r\n  let result = false;\r\n  projects.forEach((item) => {\r\n    if (item.name === name) {\r\n      errorProjectNew.textContent = \"Project already exists\";\r\n      setTimeout(() => {\r\n        errorProjectNew.textContent = \"\";\r\n      }, 2000);\r\n      return (result = true);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nbtnProjectNew.addEventListener(\"click\", () => {\r\n  if (inputProjectNew.value) {\r\n    if (!checkUniqueProject(inputProjectNew.value)) {\r\n      projects.push(new Project(inputProjectNew.value));\r\n      inputProjectNew.value = \"\";\r\n      renderProjectList();\r\n      selectProjectList.value = projects.length - 1;\r\n      openingProject = selectProjectList.value;\r\n      renderTasks();\r\n    }\r\n  }\r\n});\r\n\r\n// Select Project\r\nconst content = document.querySelector(\".content\");\r\n\r\nconst projectContainer = document.querySelector(\".project-container\");\r\nconst selectProjectList = document.querySelector(\"#project-list\");\r\nconst inputProjectRename = document.querySelector(\"#project-rename\");\r\n\r\nprojectContainer.addEventListener(\"click\", (e) => {\r\n  const target = e.target;\r\n\r\n  if (target.classList.contains(\"project-delete-btn\")) {\r\n    projects.splice(openingProject, 1);\r\n    if (projects.length === 0) projects.push(new Project(\"Default\"));\r\n    renderProjectList();\r\n    renderTasks();\r\n  }\r\n\r\n  if (target.classList.contains(\"project-rename-btn\")) {\r\n    if (inputProjectRename.value) {\r\n      projects[openingProject].name = inputProjectRename.value;\r\n      inputProjectRename.value = \"\";\r\n      renderProjectList();\r\n      renderTasks();\r\n    }\r\n  }\r\n});\r\n\r\nselectProjectList.addEventListener(\"change\", () => {\r\n  openingProject = selectProjectList.value;\r\n  renderTasks();\r\n});\r\n\r\nfunction clearProjectList() {\r\n  selectProjectList.innerText = \"\";\r\n}\r\n\r\nfunction renderProjectList() {\r\n  clearProjectList();\r\n  projects.forEach((item, index) => {\r\n    const option = document.createElement(\"option\");\r\n    option.textContent = item.name;\r\n    option.value = index;\r\n\r\n    selectProjectList.appendChild(option);\r\n  });\r\n  saveToLocal();\r\n}\r\n\r\n// All Projects\r\nconst allProjects = document.querySelector(\"#all-projects\");\r\n\r\nallProjects.addEventListener(\"change\", () => {\r\n  renderTasks();\r\n});\r\n\r\n// New Task\r\nconst inputNewTaskTitle = document.querySelector(\"#new-task-title\");\r\nconst inputNewTaskDueDate = document.querySelector(\"#new-task-due-date\");\r\nconst btnNewTask = document.querySelector(\".new-task-btn\");\r\n\r\nfunction addTask(title, dueDate) {\r\n  projects[openingProject].tasks.push(new Task(title, dueDate));\r\n}\r\n\r\nbtnNewTask.addEventListener(\"click\", () => {\r\n  if (inputNewTaskTitle.value) {\r\n    addTask(inputNewTaskTitle.value, inputNewTaskDueDate.value);\r\n    inputNewTaskTitle.value = \"\";\r\n    inputNewTaskDueDate.value = \"\";\r\n    renderTasks();\r\n  }\r\n});\r\n\r\nfunction clearContent() {\r\n  content.innerText = \"\";\r\n}\r\n\r\nfunction addEditBtn(projectTask, index, projectIndex) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Edit\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    if (projectIndex >= 0) {\r\n      selectProjectList.value = projectIndex;\r\n      openingProject = selectProjectList.value;\r\n    }\r\n\r\n    openingTask = index;\r\n    projectTask.title\r\n      ? (editorTitle.value = projectTask.title)\r\n      : (editorTitle.value = \"\");\r\n    projectTask.description\r\n      ? (editorDescription.value = projectTask.description)\r\n      : (editorDescription.value = \"\");\r\n    projectTask.dueDate\r\n      ? (editorDueDate.value = projectTask.dueDate)\r\n      : (editorDueDate.value = \"\");\r\n    projectTask.priority\r\n      ? (editorPriority.checked = projectTask.priority)\r\n      : (editorPriority.checked = false);\r\n    editor.show();\r\n  });\r\n}\r\n\r\nfunction addDeleteBtn(projectTask, index) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Delete\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    projectTask.splice(index, 1);\r\n    renderTasks();\r\n  });\r\n}\r\n\r\nfunction pushTasksToDom(project, projectIndex) {\r\n  project.tasks.forEach((task, index) => {\r\n    const para = document.createElement(\"p\");\r\n    if (task.priority) para.textContent += \"[Bell] \";\r\n    para.textContent += `${task.title} `;\r\n    if (task.dueDate) para.textContent += `[${task.dueDate}] `;\r\n    if (allProjects.checked) para.textContent += `{${project.name}}`;\r\n\r\n    content.appendChild(para);\r\n    addEditBtn(task, index, projectIndex);\r\n    addDeleteBtn(project.tasks, index);\r\n  });\r\n}\r\n\r\nfunction renderTasks() {\r\n  clearContent();\r\n  if (allProjects.checked) {\r\n    projects.forEach((project, projectIndex) => {\r\n      pushTasksToDom(project, projectIndex);\r\n    });\r\n  } else {\r\n    pushTasksToDom(projects[openingProject], openingProject);\r\n  }\r\n  saveToLocal();\r\n}\r\n\r\n// Editor modal\r\nconst editor = document.querySelector(\"dialog\");\r\nconst editorTitle = document.querySelector(\"#edit-title\");\r\nconst editorDescription = document.querySelector(\"#edit-description\");\r\nconst editorDueDate = document.querySelector(\"#edit-due-date\");\r\nconst editorPriority = document.querySelector(\"#edit-priority\");\r\n\r\neditor.addEventListener(\"click\", (e) => {\r\n  const target = e.target;\r\n  if (target.classList.contains(\"edit-submit-btn\")) {\r\n    projects[openingProject].tasks[openingTask].title = editorTitle.value;\r\n    projects[openingProject].tasks[openingTask].description =\r\n      editorDescription.value;\r\n    projects[openingProject].tasks[openingTask].dueDate = editorDueDate.value;\r\n    projects[openingProject].tasks[openingTask].priority =\r\n      editorPriority.checked;\r\n    renderTasks();\r\n  }\r\n  if (target.classList.contains(\"edit-close-btn\")) {\r\n    editor.close();\r\n  }\r\n});\r\n\r\n// Init\r\n(function () {\r\n  renderProjectList();\r\n  renderTasks();\r\n})();\r\n"],"names":["Project","constructor","name","this","tasks","Task","title","dueDate","description","priority","projects","JSON","parse","localStorage","getItem","openingTask","openingProject","saveToLocal","setItem","stringify","inputProjectNew","document","querySelector","btnProjectNew","errorProjectNew","addEventListener","value","result","forEach","item","textContent","setTimeout","checkUniqueProject","push","renderProjectList","selectProjectList","length","renderTasks","content","projectContainer","inputProjectRename","innerText","index","option","createElement","appendChild","e","target","classList","contains","splice","allProjects","inputNewTaskTitle","inputNewTaskDueDate","pushTasksToDom","project","projectIndex","task","para","checked","projectTask","btn","editorTitle","editorDescription","editorDueDate","editorPriority","editor","show","addEditBtn","addDeleteBtn","close"],"sourceRoot":""}