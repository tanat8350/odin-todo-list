{"version":3,"file":"index.bundle.js","mappings":"MAEA,MAAMA,EAAW,GAEjB,MAAMC,EACJ,WAAAC,CAAYC,GACVC,KAAKD,KAAOA,EACZC,KAAKC,MAAQ,EACf,EAEFL,EAASM,KAAK,IAAIL,EAAQ,UAC1BD,EAASM,KAAK,IAAIL,EAAQ,UAE1B,MAAMM,EAAUC,SAASC,cAAc,YACjCC,EAAoBF,SAASC,cAAc,iBAMjD,SAASE,IAYPD,EAAkBE,UAAY,GAV9BZ,EAASa,SAASC,IAChB,MAAMC,EAASP,SAASQ,cAAc,UACtCD,EAAOE,YAAcH,EAAKX,KAE1BO,EAAkBQ,YAAYH,EAAO,GAEzC,CAZAL,EAAkBS,iBAAiB,UAAU,KAC3CC,GAAa,IAYfT,IAMA,MAAMU,EAAkBb,SAASC,cAAc,gBACzBD,SAASC,cAAc,oBAa/BU,iBAAiB,SAAS,KAClCE,EAAgBC,QAZtB,SAA4BnB,GAC1B,IAAIoB,GAAS,EAOb,OANAvB,EAASa,SAASC,IAChB,GAAIA,EAAKX,OAASA,EAEhB,OADAqB,QAAQC,IAAI,wBACJF,GAAS,CACnB,IAEKA,CACT,CAISG,CAAmBL,EAAgBC,SACtCtB,EAASM,KAAK,IAAIL,EAAQoB,EAAgBC,QAC1CD,EAAgBC,MAAQ,GACxBX,KAEJ,IAGuBH,SAASC,cAAc,uBAC/BU,iBAAiB,SAAS,KACzCnB,EAASa,SAAQ,CAACC,EAAMa,KAClBb,EAAKX,OAASO,EAAkBY,OAClCtB,EAAS4B,OAAOD,EAAO,EACzB,IAEFhB,IACAS,GAAa,IAGf,MAAMS,EACJ,WAAA3B,CAAY4B,EAAOC,EAASC,EAAaC,GACvC7B,KAAK0B,MAAQA,EACb1B,KAAK2B,QAAUA,EACf3B,KAAK4B,YAAcA,EACnB5B,KAAK6B,SAAWA,CAClB,EAGF,MAAMC,EAAa1B,SAASC,cAAc,iBACpC0B,EAAoB3B,SAASC,cAAc,mBAC3C2B,EAAsB5B,SAASC,cAAc,sBAiCnD,SAASW,IAbPb,EAAQK,UAAY,GAepBZ,EAASa,SAASC,IAChB,GAAIA,EAAKX,OAASO,EAAkBY,MAAO,CACzC,MAAMjB,EAAQS,EAAKT,MACnBA,EAAMQ,SAAQ,CAACwB,EAAMV,KACnB,MAAMW,EAAO9B,SAASQ,cAAc,KACpCsB,EAAKrB,YAAc,GAAGoB,EAAKP,gBAAgBO,EAAKN,UAChDxB,EAAQW,YAAYoB,GAlB5B,SAAsBC,EAAaZ,GACjC,MAAMa,EAAMhC,SAASQ,cAAc,UACnCwB,EAAIvB,YAAc,SAClBV,EAAQW,YAAYsB,GACpBA,EAAIrB,iBAAiB,SAAS,KAC5BoB,EAAYX,OAAOD,EAAO,GAC1BP,GAAa,GAEjB,CAWQqB,CAAapC,EAAOsB,EAAM,GAE9B,IAEJ,CApCAO,EAAWf,iBAAiB,SAAS,KARrC,IAAiBW,EAAOC,EASlBI,EAAkBb,QATPQ,EAULK,EAAkBb,MAVNS,EAUaK,EAAoBd,MATvDtB,EAASa,SAASC,IACZA,EAAKX,OAASO,EAAkBY,OAClCR,EAAKT,MAAMC,KAAK,IAAIuB,EAAKC,EAAOC,GAClC,IAOAI,EAAkBb,MAAQ,GAC1Bc,EAAoBd,MAAQ,GAC5BF,IACF,G","sources":["webpack://odin-todo-list/./src/index.js"],"sourcesContent":["// import * as task from \"./task.js\";\r\n\r\nconst projects = [];\r\n\r\nclass Project {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n}\r\nprojects.push(new Project(\"test1\"));\r\nprojects.push(new Project(\"test2\"));\r\n\r\nconst content = document.querySelector(\".content\");\r\nconst selectProjectList = document.querySelector(\"#project-list\");\r\n\r\nselectProjectList.addEventListener(\"change\", () => {\r\n  renderTasks();\r\n});\r\n\r\nfunction renderProjectList() {\r\n  clearProjectList();\r\n  projects.forEach((item) => {\r\n    const option = document.createElement(\"option\");\r\n    option.textContent = item.name;\r\n\r\n    selectProjectList.appendChild(option);\r\n  });\r\n}\r\nrenderProjectList();\r\n\r\nfunction clearProjectList() {\r\n  selectProjectList.innerText = \"\";\r\n}\r\n\r\nconst inputProjectNew = document.querySelector(\"#project-new\");\r\nconst btnProjectNew = document.querySelector(\".project-new-btn\");\r\n\r\nfunction checkUniqueProject(name) {\r\n  let result = false;\r\n  projects.forEach((item) => {\r\n    if (item.name === name) {\r\n      console.log(\"Error duplicate name\");\r\n      return (result = true);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nbtnProjectNew.addEventListener(\"click\", () => {\r\n  if (inputProjectNew.value) {\r\n    if (!checkUniqueProject(inputProjectNew.value)) {\r\n      projects.push(new Project(inputProjectNew.value));\r\n      inputProjectNew.value = \"\";\r\n      renderProjectList();\r\n    }\r\n  }\r\n});\r\n\r\nconst btnProjectDelete = document.querySelector(\".project-delete-btn\");\r\nbtnProjectDelete.addEventListener(\"click\", () => {\r\n  projects.forEach((item, index) => {\r\n    if (item.name === selectProjectList.value) {\r\n      projects.splice(index, 1);\r\n    }\r\n  });\r\n  renderProjectList();\r\n  renderTasks();\r\n});\r\n\r\nclass Task {\r\n  constructor(title, dueDate, description, priority) {\r\n    this.title = title;\r\n    this.dueDate = dueDate;\r\n    this.description = description;\r\n    this.priority = priority;\r\n  }\r\n}\r\n\r\nconst btnNewTask = document.querySelector(\".new-task-btn\");\r\nconst inputNewTaskTitle = document.querySelector(\"#new-task-title\");\r\nconst inputNewTaskDueDate = document.querySelector(\"#new-task-due-date\");\r\n\r\nfunction addTask(title, dueDate) {\r\n  projects.forEach((item) => {\r\n    if (item.name === selectProjectList.value) {\r\n      item.tasks.push(new Task(title, dueDate));\r\n    }\r\n  });\r\n}\r\n\r\nbtnNewTask.addEventListener(\"click\", () => {\r\n  if (inputNewTaskTitle.value) {\r\n    addTask(inputNewTaskTitle.value, inputNewTaskDueDate.value);\r\n    inputNewTaskTitle.value = \"\";\r\n    inputNewTaskDueDate.value = \"\";\r\n    renderTasks();\r\n  }\r\n});\r\n\r\nfunction clearContent() {\r\n  content.innerText = \"\";\r\n}\r\n\r\nfunction addDeleteBtn(projectTask, index) {\r\n  const btn = document.createElement(\"button\");\r\n  btn.textContent = \"Delete\";\r\n  content.appendChild(btn);\r\n  btn.addEventListener(\"click\", () => {\r\n    projectTask.splice(index, 1);\r\n    renderTasks();\r\n  });\r\n}\r\n\r\nfunction renderTasks() {\r\n  clearContent();\r\n  projects.forEach((item) => {\r\n    if (item.name === selectProjectList.value) {\r\n      const tasks = item.tasks;\r\n      tasks.forEach((task, index) => {\r\n        const para = document.createElement(\"p\");\r\n        para.textContent = `${task.title} DueDate${task.dueDate}`;\r\n        content.appendChild(para);\r\n        addDeleteBtn(tasks, index);\r\n      });\r\n    }\r\n  });\r\n}\r\n"],"names":["projects","Project","constructor","name","this","tasks","push","content","document","querySelector","selectProjectList","renderProjectList","innerText","forEach","item","option","createElement","textContent","appendChild","addEventListener","renderTasks","inputProjectNew","value","result","console","log","checkUniqueProject","index","splice","Task","title","dueDate","description","priority","btnNewTask","inputNewTaskTitle","inputNewTaskDueDate","task","para","projectTask","btn","addDeleteBtn"],"sourceRoot":""}